language: scala
scala:
  - 2.12.6

before_script:
  - openssl aes-256-cbc -K $encrypted_12c8071d2874_key -iv $encrypted_12c8071d2874_iv -in secrets.zip.enc -out secrets.zip -d
  - git remote add ssh-origin "git@github.com:wellcomecollection/scala-libs.git"

cache:
  directories:
    - $HOME/.sbt
    - $HOME/.ivy2/cache
    - project/target
    - storage/target
    - storage_typesafe/target


# Everything below this line is boilerplate that should be reusable,
# unmodified, in any of our Scala library repos.

sudo: false

branches:
  only:
    - master

env:
  global:
    # This forces Python to print everything to stdout/stderr immediately.
    - PYTHONUNBUFFERED=x

services:
  - docker

jobs:
  include:
    # Format
    - stage: format
      name: format
      script: ./sbt_release_tooling.py format
    # Test
    - stage: test
      name: fixtures
      script: sbt "project fixtures" test
    - name: json
      script: sbt "project json" test
    - name: typesafe_app
      script: sbt "project typesafe_app" test
    - name: messaging
      script: sbt "project messaging" dockerComposeUp test dockerComposeStop && sbt "project messaging_typesafe" test
    - name: monitoring
      script: sbt "project monitoring" test && sbt "project monitoring_typesafe" test
    - name: storage
      script: sbt "project storage" dockerComposeUp test dockerComposeStop && sbt "project storage_typesafe" test
    # Release
    - stage: release
      name: release
      script: ./sbt_release_tooling.py release
    # Publish
    - stage: publish
      name: fixtures
      script: git pull origin master && ./sbt_release_tooling.py configure && sbt "project fixtures" publish
    - name: json
      script: git pull origin master && ./sbt_release_tooling.py configure && sbt "project json" publish
    - name: typesafe_app
      script: git pull origin master && ./sbt_release_tooling.py configure && sbt "project typesafe_app" publish
    - name: messaging
      script: git pull origin master && ./sbt_release_tooling.py configure && sbt "project messaging" publish && sbt "project messaging_typesafe" publish
    - name: monitoring
      script: git pull origin master && ./sbt_release_tooling.py configure && sbt "project monitoring" publish && sbt "project monitoring_typesafe" publish
    - name: storage
      script: git pull origin master && ./sbt_release_tooling.py configure && sbt "project storage" publish && sbt "project storage_typesafe" publish

stages:
  - format
  - name: test
  - name: release
    if: type = push
  - name: publish
    if: type = push
