steps:
  - label: format
    command: .buildkite/scripts/format.py
  - label: test fixtures
    command: .buildkite/scripts/run_sbt_tests.sh fixtures
  - label: test http
    command: .buildkite/scripts/run_sbt_tests.sh http
  - label: test json
    command: .buildkite/scripts/run_sbt_tests.sh json
  - label: test typesafe_app
    command: .buildkite/scripts/run_sbt_tests.sh typesafe_app
  - label: test monitoring
    command: .buildkite/scripts/run_sbt_tests.sh monitoring
  - label: test monitoring_typesafe
    command: .buildkite/scripts/run_sbt_tests.sh monitoring_typesafe
  - label: test messaging
    command: .buildkite/scripts/run_sbt_tests.sh messaging
  - label: test messaging_typesafe
    command: .buildkite/scripts/run_sbt_tests.sh messaging_typesafe
  - label: test storage
    command: .buildkite/scripts/run_sbt_tests.sh storage
  - label: test storage_typesafe
    command: .buildkite/scripts/run_sbt_tests.sh storage_typesafe
  - label: test elasticsearch
    command: .buildkite/scripts/run_sbt_tests.sh elasticsearch
  - label: test elasticsearch_typesafe
    command: .buildkite/scripts/run_sbt_tests.sh elasticsearch_typesafe
  - label: test sierra
    command: .buildkite/scripts/run_sbt_tests.sh sierra
  - wait
  - label: cut release
    if: build.branch == "main"
    plugins:
      - docker#v3.5.0:
          image: "760097843905.dkr.ecr.eu-west-1.amazonaws.com/wellcome/sbt_wrapper"
          mount-ssh-agent: true
          volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
          network: "host"
          always-pull: true
          propagate-environment: true
          entrypoint: "/usr/bin/python3"
    command: "/workdir/.buildkite/scripts/release.py"
  - wait
  - label: publish fixtures
    command: .buildkite/scripts/publish.py fixtures
    if: build.branch == "main"
  - label: publish http
    command: .buildkite/scripts/publish.py http
    if: build.branch == "main"
  - label: publish http_typesafe
    command: .buildkite/scripts/publish.py http_typesafe
    if: build.branch == "main"
  - label: publish json
    command: .buildkite/scripts/publish.py json
    if: build.branch == "main"
  - label: publish typesafe_app
    command: .buildkite/scripts/publish.py typesafe_app
    if: build.branch == "main"
  - label: publish messaging
    command: .buildkite/scripts/publish.py messaging
    if: build.branch == "main"
  - label: publish messaging_typesafe
    command: .buildkite/scripts/publish.py messaging_typesafe
    if: build.branch == "main"
  - label: publish monitoring
    command: .buildkite/scripts/publish.py monitoring
    if: build.branch == "main"
  - label: publish monitoring_typesafe
    command: .buildkite/scripts/publish.py monitoring_typesafe
    if: build.branch == "main"
  - label: publish storage
    command: .buildkite/scripts/publish.py storage
    if: build.branch == "main"
  - label: publish storage_typesafe
    command: .buildkite/scripts/publish.py storage_typesafe
    if: build.branch == "main"
  - label: publish elasticseach
    command: .buildkite/scripts/publish.py elasticsearch
    if: build.branch == "main"
  - label: publish elasticsearch_typesafe
    command: .buildkite/scripts/publish.py elasticsearch_typesafe
    if: build.branch == "main"
  - label: publish sierra
    command: .buildkite/scripts/publish.py sierra
    if: build.branch == "main"
  - label: publish sierra_typesafe
    command: .buildkite/scripts/publish.py sierra_typesafe
    if: build.branch == "main"

  - wait

  - label: "open downstream PRs"
    if: build.branch == "main"
    commands:
      - "pip3 install --user boto3 httpx"
      - "python3 .buildkite/scripts/open_downstream_prs.py"
    agents:
      queue: nano
